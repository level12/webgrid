name: Nox

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Limit this workflow to a single run at a time per-branch to avoid wasting worker resources
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-matrix:
    runs-on: ubuntu-24.04

    outputs:
      sessions: ${{ steps.set-matrix.outputs.sessions }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - id: set-matrix
        name: Set nox sessions for matrix
        run: |
          set -euo pipefail
          echo "sessions=$(uv run --only-group nox -- tasks/gh-nox-sessions)" >> $GITHUB_OUTPUT
        env:
          PYTHONPATH: './src'

  nox:
    needs: generate-matrix
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        session: ${{ fromJson(needs.generate-matrix.outputs.sessions) }}

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=3s
          --health-timeout=3s
          --health-retries=15

      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Docker-sa-password
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P Docker-sa-password -Q \"select 'ok'\""
          --health-interval=3s
          --health-timeout=3s
          --health-retries=15

    env:
      UV_LINK_MODE: copy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      # MSSQL sessions need ODBC driver in the runner
      - name: Install MS ODBC driver (Ubuntu)
        if: contains(matrix.session, 'pytest_mssql')
        run: tasks/odbc-driver-install

      - name: Run Nox session
        run: |
          uv run --only-group nox -- nox -s "${{ matrix.session }}"
