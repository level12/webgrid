version: 2.1
commands:
    runtests:
        parameters:
            toxcommand:
                type: string
                default: tox
        steps:
            - checkout

            - run:
                name: install tox
                command: >
                    python3.10 -m pip install --upgrade --force-reinstall tox pip

            - run:
                name: version checks
                command: |
                    python3.10 --version
                    pip --version
                    tox --version

            - run:
                name: run tox
                command: << parameters.toxcommand >>

            - store_test_results:
                path: .circleci/test-reports/

            - run:
                name: push code coverage
                command: bash <(curl -s https://codecov.io/bash) -X coveragepy -t "f52ea144-6e93-4cda-b927-1f578a6e814c"

jobs:
    postgres:
        docker:
            - image: level12/python-test-multi
              environment:
                SQLALCHEMY_DATABASE_URI: "postgresql://postgres:password@localhost/test"
            - image: postgres:latest
              environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: password
                POSTGRES_DB: test
        steps:
            - runtests
    sqlite:
        docker:
            - image: level12/python-test-multi
              environment:
                  SQLALCHEMY_DATABASE_URI: "sqlite://"
        steps:
            - runtests
    mssql:
        docker:
            - image: level12/python-test-multi
              environment:
                  SQLALCHEMY_DATABASE_URI: "mssql+pyodbc_mssql://SA:Password12!@localhost:1433/tempdb?driver=ODBC+Driver+17+for+SQL+Server"
            - image: mcr.microsoft.com/mssql/server:2017-latest
              environment:
                ACCEPT_EULA: Y
                SA_PASSWORD: "Password12!"
        steps:
            - runtests

workflows:
    version: 2
    build:
        jobs:
            - postgres
            - sqlite
            - mssql
